# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import files_pb2 as files__pb2


class FilesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PingFiles = channel.unary_unary(
                '/Files/PingFiles',
                request_serializer=files__pb2.EmptyMessage.SerializeToString,
                response_deserializer=files__pb2.PingFilesResponse.FromString,
                )
        self.ListFiles = channel.unary_unary(
                '/Files/ListFiles',
                request_serializer=files__pb2.EmptyMessage.SerializeToString,
                response_deserializer=files__pb2.ListFilesResponse.FromString,
                )
        self.DownloadFile = channel.unary_stream(
                '/Files/DownloadFile',
                request_serializer=files__pb2.DownloadFileRequest.SerializeToString,
                response_deserializer=files__pb2.DownloadFileResponse.FromString,
                )
        self.UploadFile = channel.stream_unary(
                '/Files/UploadFile',
                request_serializer=files__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=files__pb2.EmptyMessage.FromString,
                )
        self.NamenodeConn = channel.unary_unary(
                '/Files/NamenodeConn',
                request_serializer=files__pb2.NameNodeRequest.SerializeToString,
                response_deserializer=files__pb2.StatusMessage.FromString,
                )
        self.NamenodeDownloadFile = channel.unary_unary(
                '/Files/NamenodeDownloadFile',
                request_serializer=files__pb2.DownloadFileRequest.SerializeToString,
                response_deserializer=files__pb2.DataNodeResponse.FromString,
                )
        self.NamenodeUploadFile = channel.unary_unary(
                '/Files/NamenodeUploadFile',
                request_serializer=files__pb2.EmptyMessage.SerializeToString,
                response_deserializer=files__pb2.DataNodeResponse.FromString,
                )
        self.SearchFiles = channel.unary_unary(
                '/Files/SearchFiles',
                request_serializer=files__pb2.SearchFilesRequest.SerializeToString,
                response_deserializer=files__pb2.ListFilesResponse.FromString,
                )


class FilesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PingFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NamenodeConn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NamenodeDownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NamenodeUploadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FilesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PingFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.PingFiles,
                    request_deserializer=files__pb2.EmptyMessage.FromString,
                    response_serializer=files__pb2.PingFilesResponse.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=files__pb2.EmptyMessage.FromString,
                    response_serializer=files__pb2.ListFilesResponse.SerializeToString,
            ),
            'DownloadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=files__pb2.DownloadFileRequest.FromString,
                    response_serializer=files__pb2.DownloadFileResponse.SerializeToString,
            ),
            'UploadFile': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=files__pb2.UploadFileRequest.FromString,
                    response_serializer=files__pb2.EmptyMessage.SerializeToString,
            ),
            'NamenodeConn': grpc.unary_unary_rpc_method_handler(
                    servicer.NamenodeConn,
                    request_deserializer=files__pb2.NameNodeRequest.FromString,
                    response_serializer=files__pb2.StatusMessage.SerializeToString,
            ),
            'NamenodeDownloadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.NamenodeDownloadFile,
                    request_deserializer=files__pb2.DownloadFileRequest.FromString,
                    response_serializer=files__pb2.DataNodeResponse.SerializeToString,
            ),
            'NamenodeUploadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.NamenodeUploadFile,
                    request_deserializer=files__pb2.EmptyMessage.FromString,
                    response_serializer=files__pb2.DataNodeResponse.SerializeToString,
            ),
            'SearchFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchFiles,
                    request_deserializer=files__pb2.SearchFilesRequest.FromString,
                    response_serializer=files__pb2.ListFilesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Files', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Files(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PingFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Files/PingFiles',
            files__pb2.EmptyMessage.SerializeToString,
            files__pb2.PingFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Files/ListFiles',
            files__pb2.EmptyMessage.SerializeToString,
            files__pb2.ListFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Files/DownloadFile',
            files__pb2.DownloadFileRequest.SerializeToString,
            files__pb2.DownloadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/Files/UploadFile',
            files__pb2.UploadFileRequest.SerializeToString,
            files__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NamenodeConn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Files/NamenodeConn',
            files__pb2.NameNodeRequest.SerializeToString,
            files__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NamenodeDownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Files/NamenodeDownloadFile',
            files__pb2.DownloadFileRequest.SerializeToString,
            files__pb2.DataNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NamenodeUploadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Files/NamenodeUploadFile',
            files__pb2.EmptyMessage.SerializeToString,
            files__pb2.DataNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Files/SearchFiles',
            files__pb2.SearchFilesRequest.SerializeToString,
            files__pb2.ListFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
